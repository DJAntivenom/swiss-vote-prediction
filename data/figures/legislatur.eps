%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2021/W32TeX)  Copyright 2021 Radical Eye Software
%%Title: 8a8efad3a56507a3ec79542172b0020e.dvi
%%CreationDate: Thu Jan 13 22:28:04 2022
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 432 288
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\timsa\AppData\Local\Temp\tmp_odvm_vl\tmp.ps
%+ C:\Users\timsa\.matplotlib\tex.cache\8a8efad3a56507a3ec79542172b0020e.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2022.01.13:2328
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2021 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 80 /P put
dup 83 /S put
dup 86 /V put
dup 89 /Y put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C1A83904F00C6F8129E347C6489FD4FC798ADC
BE673AAE3772C82AC0ED80420E4BCD787F6C1979B1579E3C64A5BE309D5D926A
E5B8D4F8BF72B4DDA7E9CB0DDA5AE08942BC792B10A239CCBD5711618881A239
C9B6830C394E62423A739C886E012EF92757A9BA0AB8C2B07858CDF04BAC1BCA
0CBB58CD86DE3F1FB80DDBD396B69DF25D9F4B4882E567C0F6BFB7A74F3CF6A3
9E5534A7DF253C62A7C6579DE0654DFF258AAE854B743D5814B07B9FBD6B8EBA
351B507F483E713B624CCB42D9676E2EDF29B44F23F5D501BDF6ECF5ECD6C573
41C2275C644BCFF020E44A3F8143BCB0755C6AFFF4C00C1E197DD410D5F1996E
9BB66724E7AFEB807C68E89469C90A45164A894F551A6EB2B7D4622599D231A1
D39AB6BD9718F0B6CF46F89985CEF5DD4597FA6BB6730526925E87CEDAC3F2F6
9E73F810888FC8AA1C0A2E529502832B329B1EBC55089A05E5E4CF4387389F47
DEDDA4A180282AC8B591F2B8775A355D566003B04D0603504C04951290F43BA4
55DEF6509A64768B17FECFA7C2E70A4086F25183DAA9D883F4DB78406E2CE5A5
3C29966E978FA088E79ED81533E1B6FB0433BCD7424BCAD824AD77D883702189
5B0449A10D44BF63153E8EDD8BD7A5C64D66319AE0C7A7EDB7D23F29D5FACE40
BDF7F9B0714AB9E6E655AFE2AF0E785079080243CDBCF22284D25B669F5D791A
7A60C87536427AC8F7B54DAB946E2937617D922CE89F413F35946C6E3002646F
CD01738AACB9AD52BCD0D7F9245870BEF74C9E4F13E53738592F3693928402E8
F66A5E135345962DED3B80B0C49D13DB7E16CF5EA056F9F19C93FCA6EDD26E87
144F70B923A81086B6466492608DE7977ECC8876EF149084122611199CC81278
2B98DF6D611220047133590D735BED02CFE7240C5A2A31CDF0EB03E3E86A5BC7
53054E1A5ECE20913D3B458713583686ED9A0F0CCB30B5457E6E48141D586603
01591E6EA8E4DE0B506F063F78B20AED1677394D56CEA55AB30FB97F26245ACE
93813A1D9210E7807F206E0C13AAE362028BA731E7A8352C31D89C74D1D52E8B
B374218BC985DB72E810FADF04B4DFCBAA065943D6359D3BA2ED407299B5C9E3
61C08AA256350C5092E95913D53D235A93B70CD71ACB0EFB065D71ADE66E0AD9
A98800C31CEA9AF8A199C3ED594B21E382A8B830FBC37AB23DD444FBE3857AF4
95A7F2B472D5D6A5E59AD1CC776390111ADAAFE1E51FDD24F92A4A82776FD22D
42D5CD350AE180C2CE885D83CA502037451B79C52B101ADAA48FB0A461461225
8CD39A4D644584C7B4433471A5338D30C5415E1EAA2CADE857F29047078B06C8
A96879E919590AAB39B6BA51E59571D9ACB176DA21A44F9B5F4E39D600B90065
F480324F98654398F592670EAB9A6146B6EBE2CB40E011C9AEF936A0DA8A814C
B377C8FA4485C0640E77B436527795BAA590763FDA252C12F5830D0FE2ED57F4
6DE11D849E61D5A75D54101469B1B028D29F838A52ABB8FC5A8DA624CFCB41C4
AC2072FD7DEF2CEAAF97D7E93BB25B5AB2BAFD3EE6ACEE0A127FEAE21C865A3C
E1C48F5731521B1FF4CEEFE05A2CF53FC70A50B6569D0039C334560610DD15BF
C537D546370C27D93395AE35FE3095FEA499DC328054BF07CD1CA1159872E9A3
28FBD7DA9A85F106CEA8444F50BE7BCA3BA8093A81FFAA45E8C84A77D3C39536
7C6DB203DFD078AAC06883A9B3D96D5C40D3F121B56B1C4D3B4D3A16C89A3210
ED933E003739EA80DDE526E15781E97A1F63B8A1DEDF1EF0DF3070C5CEFF9ADF
D18C0FEEF51162F4E759760BCF5D515254D2BA49F4A4BCA885E5932E4E33B635
A7661B78EAB6FB3F66FC626C5AD578FC8E30ABD64FFDDEBD4CD1A1BACE3378A7
EF817E092E55B43E757DB215F9CB6D257FFD7A58EA0C7A392E29BB4DF58D3276
14B4D428DCA6062DCB570799712D1177AA7469F8B03832A82594D4F72E5FB7E0
C3CB6AB67A6A746CEBA3EF7A609065D24571B63395B062B933EB55F3F78623FC
6BB43B7CAC810644A8E59488469DF34AC0ECC79C50CC844E607854D32C6D52E8
3F24A890B95246D02E1FF722DD86A572F6027382BC58BCCEFF1F24854394B3FB
EB394FAD3479BAFFB68D23F369246C4E76A6B2EAEDFEAFAB57AEBFD15B9D4D1D
463DE15055363CB681B598F26B27C132B89DDEBB0897B97D21ADA51D72F08876
E545825A1C847BA52076D15EB463666E080B00181A9F3221F95DE894A8F0702E
8AE9852F132FBC5B1ABF4867D8B49920F6FE6620D694B9028B70E194489B1FD0
64E515CD8EABBCD4488E8589E0C284F01CD52E27B685371C875A6FE35B2A7EC6
1F01B02AC1925E792B908A541D32880AC41C3C5F8B0C0933C19F36D5557E8CDE
9B86BB0D7806B03A4DB4517E99942B3C03C01091F2CD93AAE0F435AC4FE8C839
E69E1FE68FB06FBD58BF563372DBD30BCB727C3A5355690D94B0C8DE37ABDBF7
E8DDAFFFC3D0003EDF174F98AD750DD893E306CE5698A8FAD2D9BA1B570648C2
57C16DE3AC1F8D85467B5146B72FD47EC0C3B4BABFA2AA2F95E4794225253486
8BC0BDD3AC613B1B5D087F5FE1A6FCCD2AAAA431B36F55097E479EE8130D4C52
0E121A74EF9C325E5820D3C9EF826C2CABE5E2C91A7FE5AC5F81A314DC052163
0E4728D08DDD735BBFFAD136B7CBC274729C142AF9903CB53FCA5EA02592FC3A
2956FB848CCCA34C42682E40C6D9599C955D228D75B496670FD0D472F96D5B55
BA96D27D3D3E69F0541379AE9F60DBAF02B81F5B6E35197721FC55311DB9D3B1
851EEBF8295EB18E7C9EB7910B47FD9BDD64FB6D29C60BBC4317D7A59094674E
1D4A9418F99275B82906A8CAF8DF70497B0CC15F95AF1203AEAC82F00849A436
9DFBC83160B23DBCC4CD21D8A60CE39FCC7AF4B4FC4509C5E7639772C1EA1DE9
F7845898F27141A26B3081BF84E0BE713FF8FD16EE61C2FE2FE26C24F7EE92FA
F820225176371B2A5B778D777142C8C291BC9F8D6475FF765BD3939775BFFADB
04C92C49D4151CA498BD87B5D8474B22694C141560958B891861350D69C45725
CD33132430757DBFB7BEB1AE9C2E06CFBC8E24C97CDA83166F07EFAB35650F3F
0322259701D8E8E86B9041070639B17A7C1808784F8A070F186014D7A96C88B4
C013635CFBA44DEFA83E981C11B7FF69D666BCE6DBFC4E0889FECFBCDC8D28C3
6EC4969A2A38E0BEEC02B77762DD6D669C91554ECBFE923658698AB2A4E7319B
29019E4995D38F4BB310CC120EF7DB938D0925CABA92FF36589E19FE12D00242
3C0C6A95E726EB7950B8B33DB620AE77F20D0D4B0CE4E6D44CD783BD9EE48984
36D75A2B5EA86340949143C1B40F0234EBCD88EF7AC4B5E19D8F44B6DEF477FA
258142D7526DEA8BFD457AC7422398B6D0C627E623A88723FD0174F41973DC1E
911C30409EA873F16CF1E9A3E05D7E919AF3A318295D51F052C69A8E466DC29C
5CA85E01231D3F89B7124B3789927DFB937C6A4696C480C5EF03F02A8CB875F1
037E092AE6DEEAB9E40305D314BB656772395E7EF7417CA53F317DBEC7DACB33
67F3DAFB29E2D7E5CD46B41C25FD4ED56CC067573B646ACCB83FD6A378957DEA
FAED4B38F979EDA7734A866C627AB3231BB4C0A368D2D162D4EE560BBA1F083B
5D88D0A9D2F3AA7731115E91932C009BCF429D4E3BEFAD53EDE8B236D5ABECC4
EC8959D6EF9C8A7102FE8F010B095A64D03208AE52327DC2C549268422352EB6
A0FEBA44958BCFDEE2EEB7A91987B0CCA74B10BE061BF524B863B4B85BCC786B
44CF75618F012A4F6EA938F2B1F0FE33E5DC6D2A63C42A7F590CE7D40CF3B6DC
62E65DC52EC9220AA0F255D908C962FD8A35228B5B628B9BCF5FA7BEA5245760
FD77ABF01C8F1B541804DC64895AA38BBD383821354DB54E3EEB17F6CCA1BB7E
5B69C233A15974E8695C72D052DD1C71CB6AF715B53C8433E03A40734B3A6CB3
2E8B6565910E58EFE521554524C9586FBD7AC9D02EE58A438CF67DF720288728
C5EF979699C2002EEBD804EA750D01D0665F0CB83E3406120D6D720627D4B29A
97C4CB3254EF5027D03D7F6B2453BE3CC5AFABF71444557F0A00EC0427B29CFD
DF9BD799B22BD159196C4146DA464C29712886306367DD84BA8D83CFA3DB1574
940F3AF9A1754F1DA19275D41E4F5EEC1E04B22D005F5CACCAC594DE3CBBFF0B
946F5DBFDEC41A945A7FA169E94CBF2B9A98F2800F834F559D39B44C7A9567B2
1F8042B3E7B4EB7D5AE1A35DC17FE6852619420165EF09C34C2BCE503ABCCC6E
AAAD7057ACC4EEF1808A95BE7BD4DC7FA0D542D0261BF942174A233669326699
4A0D662C5C56C649F345344333E226431DAF47503D2706CFFA55887D56D5C77E
37E79AD2784E62E70494FBBB24142AEF176230C2E8F81E299CEA74EB28C56E36
3FB86C876E25014B15D2ABC7C1F09B6CD898B75D34194CC2DC1B5080689BE6E0
BB93827EBE586A80437E4E452AA25F730AA6F5C047F8057B3B95C098F68B761A
053DB0CC8DD507DFB06ED35393DE899E61602152B6CF62B93954059A9F77DDF8
3BB414E7639A679B909E4B176037A85FCD04047846B1E73643853E002ABC5097
06C0B0E2E8C30EFC8B0B6D2C369672CF44DEC500E941A1EDEAEBF18B178AEB44
2EA1799D33E7411A51E1B5B6A76DE873DB90921DF5D99A9D7C9B24534CB88EAC
C1E7372341809975520CC92AE9B96FE4F96163B6708A59DCCEE7B1B490E81DD1
FA507072019E3500C1E5FECA093E27BBF16E340D7D915C23F3AB5112AA0BE222
EC459FFEB32765445B3E35475F916929505ED3C5DD36ABD1E1E28F0A80A9D27F
FBA1DC396BE9F0F8A3D997FD93F61F43CBD9FEC803B2413EA7ABEBEF5AD51953
922A310D79CC31890C1A3FB787344DB355B1AC5FF7ECD4F901E714D4541B644F
3B78D8BE122514B3AE15E614F0956ABBDD73497585CA331B2AEA46E63A4C8A12
BE624E3509798DF609F967F413DDEC343F3E609830490B31A4F6C1BCA7F35392
009460659159B80015A4E5185B6601B496FCD9B4D1C219AA5B7C6C03E73D2BF4
2E150F448200FBEF611FB61E28CEE15A5FF8717081B354D8C9981A4E5FA727D2
1A8D83B435634431973485CD0EECEB22E7DD59CA1698BF044017816FB6CB9168
588312B8DB9C80D649449E93B28BE3DA73BFEBC11AAC37E1637B9AEE51C5A2A7
AA28EB42F2C96F156226F8B4BE022308CAD8D0F6D22D5EFF1ADE3E4A531031C7
4A3C347570C9F93F6DFECF0E54E4C0A1E9C4E47E2DC716CF1D518F6499204B9C
62C60978C16DD3C551C4AED242FEE20DB2FBA9ABC53A64CFD240998DB5091B33
5D70674C2331FF5982B622383084B205413E4834794457828922EE13ACD50C6D
8989B3E8FD9EDB67AED83A83560A5475AE2275285BA59C9BBFE4AD3465ADD50A
0C1EB71D2199306404CA3D97713D6A3CDF03A9F3CB34B4244E375918945E44C5
989C6771FD55EB8F55F19F7BFD1B67B4BBCB0BDB13DF283D5582C22EB5793277
C9FF8A468D812BBF4079E62F519903588B6D4F9C70ED7C9F097EC31C91E0B773
39F2896CFA6A2031558CA49514CB2255E1B847E66B3430E1D683DB36E60078A9
22B00B345E898F13052971624B4CCA6E188BB0FF408A62A4917DF6EB1CB98EC2
C4C8E121FC2ACE0EC0122F18ABCC0D24CC1141FA364ACBCC04742A135D732203
65F6EE922F7BC84DFC77E6A5B72ACC036A6FEC58132628C478DDB9180364A507
92945F3C73CDDCB1998D6A3CCE8105F789349FA74896AB93363559B340B60CFB
706615F33C1644DD76CE3DD4C8065B8C70B6F4D43A74D432E0C6497FC544FF3E
0CDAEED2AC45B4B5E5F6E85FDDFD971CC5AB919A0651ADA4B4622A121989A752
0EC2FDB980F694DA24087D45C5BE6E77C312775E3A2A65AFC09312DDC759B089
61B8D8A387DC89DF342D7739579AC0F9AC7DA9F2D77016D794059AA767002FBA
D32633D5A5B5A848524C958575DA63BCEB1DF4F0EE86BA11E04A2A9B3A4598E4
56FF285233339BB17AF489698F205D3C7159A63851DF4B0BE2101BE7AF65F3EC
E3981A5056F9241E16570117757418AECEE672F01728B25AA3CAD8E4FBEEA000
F05B24BF9DF3A2F8E10B7C9403BF9925D93D13A30D8ED8994D444FAC380193C5
D819AF1298FCB43BB798EBECD72069AD13CB058B0DD2D3F3289E348524C09E70
7A85394A2F72B9128F696A5DD615018300D0AFF038AEB7A2109113EFCDAAB572
39A244A55C97894375C2F95CBA2DCB33354C16609A00725C300BA2FB19A6034A
32C9558A97FCA4A44DF934EB09587EAB7F6FAED1C06CB9FD149C7DAACDBA7518
21A807AAF73A112E33F59903897D43AD3D3BAB06B0477DC632E0B4C30723CD1C
B90850AF63342447F3954356D6C06FF76F445C53D4E6DCC419286DC5AB43F188
83A000E637DF8ECA6DBC5DCF5C77AAE8D8CBE9ACD774A290E6FCF61AA5F71923
B3D36B1215D48C97A7441FD707BFE4358252F763070D281BD01E1F40A3DEEBBF
5376C7E3C6E0A787C8655CDEBCC9A64B761E4A1492483BC8F94D7C8597FF6A26
5FD42FE556ED70337BC32F832DBD83FDEAFF3686B2C20AF861231247F4B0136D
55057D4281B90135C693B9AD261C3C518BA1A0BA1A8C3D7163B2AA60E9A1BB69
2FF7F2A27D988B10D901084BBAB66F316611CAA0F5909738BCE76E6BDC4AE994
BD30AA7FE549E34188DB8D1B3346F447B37B71924BB077560E11668F225C12C5
F9CB004BC38E84FB7065F7BF5ECA7070CD79E71409399FC1F166967AF6618B1B
49F3882F7498476AFE70BA5820F4A0366AC90ECC6DB1B71618808E331776ACD2
2258728A879FD78D8EB38B06997F4D64CD3002F0167B008C218F2F11C4CC75E3
801F2CF47F670B352E28A29F8D617C62CEC085DE9FD07D127F70769E0D5F892E
9A94640243C87159B7804FB8B89B89ACCC06F93B0010EF0EF5DAD3083570AFD9
24BE51445D5C2B3D33847AF00629688A906BC29A0C96325D5044642E7B53533B
DF2743EA20EFAC0516C39CF63F81836EE507240BE1E86D4FA586CF81AC998A88
89ECF1696AD6E93085EECD734EE601F5BBFAC441BC26F1EC98D5955633047AAB
95020BC728D8F13828BD725D0C7DAD0CA7EC766BF6B160A8BE9553B1C2190936
9C05A6C6130D430D4354EA672659251E8F401DACA84B67EE1BD3C1F187F1D514
322DB79F7ED0C5434558B1CB3BB7977BD5798D0378237BC6601800B017FB2D20
29D429A4A1AD261CEA2EFD1B7E08E474A121B303B7EED0D83B1C00CE50B0F707
6E4E8D499FC670A51EB3BF3C6A33B52D16630C0675AE1F4C601BE18D5710ED49
FFEDDFB905CFD91694AD83947816720C4100F4B6A23310DE1BCBC939AC6AD5D6
119737E3F2D3EF075DF53BFBCE37A9A5C274562C7207CA14732CEB73389AFFC9
48991241158CAF0BB245CD77BF3AE8FE617EC58805F4613A7C517105EAD7E032
994C15BBBB66E1D56790DE77F85BED21CDA38F655DBF09060C2F374D3B563CF8
43837F117CC079E4C196FF09D50E649124D42C201C66F75E0ED9436D798EABCD
8E2702853282CAB5757E65F08667AC86F6726C4ED55CF87F58AB47C3412235B2
D2D7C138753626C069E6021802BEF304B3775F546B4ABD941BA32EDE41D35566
6FFD74828C8947C087103DDAB171374B82B1019CE790C4E3C1F720F86703BD62
FA89FEC6B823E73F30682B65770ACFA291997D0B04D364814FD5EC94185917C7
12672E55EAB3E0B2BF1BF806660787AA44D175464414EA3F10085CAC03EBC27F
F8A81F5E6A4C67FE5AB61D83AF76F0EB2ABF5E49D71882AD34FD2C7A84262129
E3A4A1A96C75DFA54C72D8DADE2383BA25275D20CEFB565C47E997F0A133F445
22ADD129DB2E91677D6D3D671D33BCFAFE6B4C856D88297B7F1B9BEF382DBDE1
AB957FC965E4DA28B8C7DEE648DC5267A0ABD541DDABC49783582F96E35DE2F3
61FC82521FFDC5F017F51D5BF86015D9526B7671393F5DFBD25B82C744015C82
D61B13FCDFB231FE81B8133D7A9DF5D4D28CC5BB016E5DDE2D3C3DEDBDDDDAF1
0638AC5AF96DFDFA5688481BDA3907C70CE7B75E724F4DC92BF186068C7114E5
EF1098A4CAA8C8DF864956B2C6113BC1EDD5991556B2E21CA1C668019ADA35FE
7F6D3C2AAF7C3537954ADFA341243D15F7F5DA32EFAE4FFF54444BAE1A2074FB
CE475E00055BDBD8D0B69FD032F77933558E08EE2DCBB7B9C9E0E5CC1C1C1AEB
8FD6AA8ECCBC761821E47845BE1ABD891CCA11AC00A603984664E0E26212A073
EC154B8D4D03B791F0703CD456B8EA720A32FFAEF7E7F58623C32A42B8E84B4C
C704E7C2DB940A14950A8EBC0A471B72DA760D2022A093AA4A6F6B2474B98876
77A1740ADE4891123E6DC8C28BB79713053F398271448B847E912889EAC9644E
704ED690CF1F6F7A20F85A88350D3A870537488D5619EFFDE26BFCB8434EB83F
A72611E5B701250EE4D47DECF65AA620FC93B9821E56E58D7A516F922120DA32
B14057F61D68918B215E0D6AAA8FCB41B1E76741235F3A7C6D6CD68EFF4EE112
270CA9D1145313A1A923175BFB2AB141BC4CDC2937E913BF65C38D01CC7BBB93
2C40A50AC0156D347FFB927845DD0BBE32C108F7FD78E02633CEED29A289F0FD
9F1942E049A2EC06D46C3EA821FB9FDCE90F7B7048A387EDADC6266CFA33DFCD
1067A62FBBB48F11AB545A83E8135FC261BDE49D86BA6CB18137275A539F2494
D5A6EFD3675B0A71AF975686AF626534D1A611799EEF9D270035F96FA96FBAD9
A888B8CDD915F5762E972B5701EEEE369C914A991542BE4BB1C5547E0CB89EBD
7B9AB72D9BEB4B71BCE88FF2EA03DD1A0A56CF6F9D73121F35FC58477CFE3797
A9FB862D1A5C6EDCFB64EF7DF2DEDF5A90D8AD0FE8D56A875F829E6DEAA6F79A
B9A4BE29A14A9CC5D846EAFF969C36FD383B2F3D4B262CA29B988764F6B8B4BF
995C314FAFFBB2BC1F04B5313265CDAF31EB57C9E30EF8EBC6FEB0C7F4B81F4B
4D697115EEC8695ED9EB518517F6F6D8215185272933227CF05A6824592D05C2
1DB7A5F3CE8978FD1CC7341086209E9AA05BCEC78081D54AE7ABED707D706563
31D2266A645C4B8A9557803DDB12C01F2EF2E28F3B89498E0CCAB8ADE70A396C
320B9E78B839AFE4D950F6F780FE92A97B288A8DE6278798E9728D8A13EAAE95
D1D426C25AD21EEAC9A73B48208101FF21CAB78F13EE0993D3811BCE56831E33
F31EAC9B97EC6997D7AF93CB796D8481EC1DB60C34093B812BEA07F7A8657D1A
C8EC099C2039EC0F4B5A47CC89577B1A4EC3A5533D7A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 28417720 18945144 1000 600 600
(C:\Users\timsa\.matplotlib\tex.cache\8a8efad3a56507a3ec79542172b0020e.dvi)
@start /Fa 139[32 33 33 1[46 42 46 69 23 4[42 25 37 1[37
1[42 7[62 2[62 2[46 2[57 22[42 42 42 1[42 42 42 42 42
42 48[{}26 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1800 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1800 a -600 1800 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]](psmarker15)[[15(bl)1 90.000000]]16
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 1800 a @beginspecial 0 @llx 0
@lly 432 @urx 288 @ury 4320 @rwi @clip @setspecial
%%BeginDocument: C:/Users/timsa/AppData/Local/Temp/tmpypaq2j62/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: legislatur.eps
%%Creator: Matplotlib v3.4.2, https://matplotlib.org/
%%CreationDate: Thu Jan 13 23:28:03 2022
%%BoundingBox: 0 0 432 288
%%HiResBoundingBox: 0.000000 0.000000 432.000000 288.000000
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
432 288 0 0 clipbox
gsave
0 0 m
432 0 l
432 288 l
0 288 l
cl
grestore
gsave
54 36 m
388.8 36 l
388.8 253.44 l
54 253.44 l
cl
1.000 setgray
fill
grestore
gsave
334.8 217.44 54 36 clipbox
69.218182 36 m
78.170053 36 l
78.170053 47.947253 l
69.218182 47.947253 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
78.170053 36 m
87.121925 36 l
87.121925 59.894505 l
78.170053 59.894505 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
87.121925 36 m
96.073797 36 l
96.073797 51.92967 l
87.121925 51.92967 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
96.073797 36 m
105.025668 36 l
105.025668 43.964835 l
96.073797 43.964835 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
105.025668 36 m
113.97754 36 l
113.97754 43.964835 l
105.025668 43.964835 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
113.97754 36 m
122.929412 36 l
122.929412 47.947253 l
113.97754 47.947253 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
122.929412 36 m
131.881283 36 l
131.881283 55.912088 l
122.929412 55.912088 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
131.881283 36 m
140.833155 36 l
140.833155 87.771429 l
131.881283 87.771429 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
140.833155 36 m
149.785027 36 l
149.785027 63.876923 l
140.833155 63.876923 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
149.785027 36 m
158.736898 36 l
158.736898 59.894505 l
149.785027 59.894505 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
158.736898 36 m
167.68877 36 l
167.68877 75.824176 l
158.736898 75.824176 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
167.68877 36 m
176.640642 36 l
176.640642 67.859341 l
167.68877 67.859341 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
176.640642 36 m
185.592513 36 l
185.592513 75.824176 l
176.640642 75.824176 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
185.592513 36 m
194.544385 36 l
194.544385 55.912088 l
185.592513 55.912088 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
194.544385 36 m
203.496257 36 l
203.496257 67.859341 l
194.544385 67.859341 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
203.496257 36 m
212.448128 36 l
212.448128 91.753846 l
203.496257 91.753846 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
212.448128 36 m
221.4 36 l
221.4 107.683516 l
212.448128 107.683516 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
221.4 36 m
230.351872 36 l
230.351872 107.683516 l
221.4 107.683516 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
230.351872 36 m
239.303743 36 l
239.303743 79.806593 l
230.351872 79.806593 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
239.303743 36 m
248.255615 36 l
248.255615 79.806593 l
239.303743 79.806593 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
248.255615 36 m
257.207487 36 l
257.207487 83.789011 l
248.255615 83.789011 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
257.207487 36 m
266.159358 36 l
266.159358 147.507692 l
257.207487 147.507692 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
266.159358 36 m
275.11123 36 l
275.11123 235.120879 l
266.159358 235.120879 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
275.11123 36 m
284.063102 36 l
284.063102 99.718681 l
275.11123 99.718681 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
284.063102 36 m
293.014973 36 l
293.014973 175.384615 l
284.063102 175.384615 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
293.014973 36 m
301.966845 36 l
301.966845 135.56044 l
293.014973 135.56044 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
301.966845 36 m
310.918717 36 l
310.918717 243.085714 l
301.966845 243.085714 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
310.918717 36 m
319.870588 36 l
319.870588 171.402198 l
310.918717 171.402198 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
319.870588 36 m
328.82246 36 l
328.82246 231.138462 l
319.870588 231.138462 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
328.82246 36 m
337.774332 36 l
337.774332 139.542857 l
328.82246 139.542857 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
337.774332 36 m
346.726203 36 l
346.726203 143.525275 l
337.774332 143.525275 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
346.726203 36 m
355.678075 36 l
355.678075 199.279121 l
346.726203 199.279121 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
355.678075 36 m
364.629947 36 l
364.629947 167.41978 l
355.678075 167.41978 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
334.8 217.44 54 36 clipbox
364.629947 36 m
373.581818 36 l
373.581818 103.701099 l
364.629947 103.701099 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
0.800 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
72.7368 36 o
grestore
gsave
62.774 22.082 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
116.72 36 o
grestore
gsave
106.757 22.082 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
160.703 36 o
grestore
gsave
150.741 22.082 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
204.686 36 o
grestore
gsave
194.724 22.082 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
248.67 36 o
grestore
gsave
238.707 22.082 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
292.653 36 o
grestore
gsave
282.69 22.082 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
336.636 36 o
grestore
gsave
326.673 22.082 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
380.619 36 o
grestore
gsave
370.656 22.082 moveto
(psmarker7)
show
grestore
gsave
211.424 9.226 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
54 36 o
grestore
gsave
42.019 32.541 moveto
(psmarker9)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
54 75.8242 o
grestore
gsave
37.037 72.365 moveto
(psmarker10)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
54 115.648 o
grestore
gsave
37.037 112.189 moveto
(psmarker11)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
54 155.473 o
grestore
gsave
37.037 152.013 moveto
(psmarker12)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
54 195.297 o
grestore
gsave
37.037 191.837 moveto
(psmarker13)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
54 235.121 o
grestore
gsave
37.037 231.662 moveto
(psmarker14)
show
grestore
gsave
31.1 132.792 moveto
(psmarker15)
show
grestore
0 setlinejoin
2 setlinecap
gsave
54 36 m
54 253.44 l
stroke
grestore
gsave
388.8 36 m
388.8 253.44 l
stroke
grestore
gsave
54 36 m
388.8 36 l
stroke
grestore
gsave
54 253.44 m
388.8 253.44 l
stroke
grestore

end
showpage

%%EndDocument
 @endspecial -600 1800 a
 /End PSfrag
 -600 1800 a -600 116 a
 /Hide PSfrag
 -600
116 a -1340 173 a Fa(PSfrag)26 b(replacemen)n(ts)p -1340
203 741 4 v -600 206 a
 /Unhide PSfrag
 -600 206 a -766 306 a
  {
 -766 306
a Black 0.000 0.000 0.000 TeXcolorrgb Fa(1850)p Black
Black -766 306 a
  } 0/Place PSfrag
 -766 306 a -766 405 a
  {
 -766 405 a Black
0.000 0.000 0.000 TeXcolorrgb Fa(1875)p Black Black -766
405 a
  } 1/Place PSfrag
 -766 405 a -766 505 a
  {
 -766 505 a Black 0.000 0.000 0.000
TeXcolorrgb Fa(1900)p Black Black -766 505 a
  } 2/Place PSfrag
 -766 505
a -766 604 a
  {
 -766 604 a Black 0.000 0.000 0.000 TeXcolorrgb
Fa(1925)p Black Black -766 604 a
  } 3/Place PSfrag
 -766 604 a -766 704
a
  {
 -766 704 a Black 0.000 0.000 0.000 TeXcolorrgb Fa(1950)p
Black Black -766 704 a
  } 4/Place PSfrag
 -766 704 a -766 804 a
  {
 -766 804
a Black 0.000 0.000 0.000 TeXcolorrgb Fa(1975)p Black
Black -766 804 a
  } 5/Place PSfrag
 -766 804 a -766 903 a
  {
 -766 903 a Black
0.000 0.000 0.000 TeXcolorrgb Fa(2000)p Black Black -766
903 a
  } 6/Place PSfrag
 -766 903 a -766 1003 a
  {
 -766 1003 a Black 0.000 0.000 0.000
TeXcolorrgb Fa(2025)p Black Black -766 1003 a
  } 7/Place PSfrag
 -766 1003
a -766 1103 a
  {
 -766 1103 a Black 0.000 0.000 0.000 TeXcolorrgb
Fa(Y)-7 b(ear)p Black Black -766 1103 a
  } 8/Place PSfrag
 -766 1103 a -642
1202 a
  {
 -642 1202 a Black 0.000 0.000 0.000 TeXcolorrgb
Fa(0)p Black Black -642 1202 a
  } 9/Place PSfrag
 -642 1202 a -683 1302
a
  {
 -683 1302 a Black 0.000 0.000 0.000 TeXcolorrgb Fa(10)p
Black Black -683 1302 a
  } 10/Place PSfrag
 -683 1302 a -683 1401 a
  {
 -683
1401 a Black 0.000 0.000 0.000 TeXcolorrgb Fa(20)p Black
Black -683 1401 a
  } 11/Place PSfrag
 -683 1401 a -683 1501 a
  {
 -683 1501 a
Black 0.000 0.000 0.000 TeXcolorrgb Fa(30)p Black Black
-683 1501 a
  } 12/Place PSfrag
 -683 1501 a -683 1601 a
  {
 -683 1601 a Black
0.000 0.000 0.000 TeXcolorrgb Fa(40)p Black Black -683
1601 a
  } 13/Place PSfrag
 -683 1601 a -683 1700 a
  {
 -683 1700 a Black 0.000 0.000 0.000
TeXcolorrgb Fa(50)p Black Black -683 1700 a
  } 14/Place PSfrag
 -683 1700
a -799 1800 a
  {
 -799 1800 a Black 0.000 0.000 0.000 TeXcolorrgb
Fa(V)g(otes)p Black Black -799 1800 a
  } 15/Place PSfrag
 -799 1800 a 3000
1800 a
 currentpoint grestore moveto
 3000 1800 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
